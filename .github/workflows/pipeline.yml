name: Deploy Next.js 15

on:
  push:
    branches: [main]

env:
  AWS_REGION: us-east-1
  ENVIRONMENT: production

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: 20
        cache: 'npm'

    - name: Install Dependencies
      run: npm ci --prefer-offline

    - name: Build Project
      run: |
        echo "NEXT_PUBLIC_API_URL=${{ secrets.NEXT_PUBLIC_API_URL }}" >> .env
        npm run build
        rm .env

    - name: Configure AWS Credentials
      uses: aws-actions/configure-aws-credentials@v4
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ env.AWS_REGION }}

    - name: Login to Amazon ECR
      id: ecr-login
      uses: aws-actions/amazon-ecr-login@v2

    - name: Build and Push Docker Image
      env:
        ECR_REGISTRY: ${{ steps.ecr-login.outputs.registry }}
        ECR_REPOSITORY: english-${{env.ENVIRONMENT}}-frontend
      run: |
        docker build --platform linux/amd64 -f shipping/Dockerfile -t $ECR_REGISTRY/$ECR_REPOSITORY:latest \
          --build-arg NODE_ENV=${{env.ENVIRONMENT}} \
          .
        docker push $ECR_REGISTRY/$ECR_REPOSITORY:latest

    - name: Force ECS Deployment
      env:
        ECS_CLUSTER: english-${{env.ENVIRONMENT}}-frontend-cluster
        ECS_SERVICE: english-${{env.ENVIRONMENT}}-frontend-service
      run: |
        aws ecs update-service \
          --cluster $ECS_CLUSTER \
          --service $ECS_SERVICE \
          --force-new-deployment \
          --region $AWS_REGION
